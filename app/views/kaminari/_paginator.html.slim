= paginator.render do
  nav
    ul.pagination
      == first_page_tag unless current_page.first?
      == prev_page_tag unless current_page.first?
      - each_page do |page|
        - if page.left_outer? || page.right_outer? || page.inside_window?
          == page_tag page
        - elsif !page.was_truncated?
          == gap_tag
      == next_page_tag unless current_page.last?
      == last_page_tag unless current_page.last?
/ = paginator.render do
/   nav
/     ul.pagination
/       unless current_page.first?
/         li.page-item
/           = link_to_unless current_page.first?, raw(t 'views.pagination.first'), url, remote: remote, class: 'page-link'
/       unless current_page.first?
/         li.page-item
/           = link_to_unless current_page.first?, raw(t 'views.pagination.previous'), url, rel: 'prev', remote: remote, class: 'page-link'
/       - each_page do |page|
/         - if page.left_outer? || page.right_outer? || page.inside_window?
/           - if page.current?
/             li.page-item.active
/               = content_tag :a, page, data: {remote: remote}, rel: (page.next? ? 'next' : (page.prev? ? 'prev' : nil)), class: 'page-link'
/           - else
/             li.page-item
/               = link_to page, url, remote: remote, rel: (page.next? ? 'next' : (page.prev? ? 'prev' : nil)), class: 'page-link'
/         - elsif !page.was_truncated?
/           li.page-item.disabled
/             = link_to raw(t 'views.pagination.truncate'), '#', class: 'page-link'
/       unless current_page.last?
/         li.page-item
/           = link_to_unless current_page.last?, raw(t 'views.pagination.next'), url, rel: 'next', remote: remote, class: 'page-link'
/       unless current_page.last?
/         li.page-item
/           = link_to_unless current_page.last?, raw(t 'views.pagination.last'), url, remote: remote, class: 'page-link'